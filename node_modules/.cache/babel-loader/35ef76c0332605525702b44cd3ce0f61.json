{"ast":null,"code":"var _jsxFileName = \"/Users/hassanbadru/Dropbox/homecook_app/tech_assessment/homecook-dev-challenge/src/contexts/kitchencontext.js\";\nimport React, { useState, useContext, createContext } from 'react';\nimport { getAllKitchens } from '../api/crud';\nconst KitchenContext = createContext();\n\nconst KitchenProvider = props => {\n  const [kitchens, updateKitchens] = useState([]);\n\n  const loadData = async () => {\n    let all_kitchens = await getAllKitchens();\n    console.log(\"all_kitchens\", all_kitchens);\n    updateKitchens(all_kitchens ? all_kitchens : []);\n  };\n\n  let data = {\n    kitchens,\n    loadData,\n    updateKitchens\n  };\n  return /*#__PURE__*/React.createElement(KitchenContext.Provider, Object.assign({\n    value: data\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst useKitchen = () => {\n  const context = useContext(KitchenContext);\n\n  if (context === undefined) {\n    throw new Error(`useUsers must be used within UsersProvider`);\n  }\n\n  return context;\n};\n\nexport { KitchenProvider, useKitchen };","map":{"version":3,"sources":["/Users/hassanbadru/Dropbox/homecook_app/tech_assessment/homecook-dev-challenge/src/contexts/kitchencontext.js"],"names":["React","useState","useContext","createContext","getAllKitchens","KitchenContext","KitchenProvider","props","kitchens","updateKitchens","loadData","all_kitchens","console","log","data","useKitchen","context","undefined","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,aAArC,QAAyD,OAAzD;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,MAAMC,cAAc,GAAGF,aAAa,EAApC;;AAGA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMS,QAAQ,GAAG,YAAY;AACzB,QAAIC,YAAY,GAAG,MAAMP,cAAc,EAAvC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,YAA5B;AACAF,IAAAA,cAAc,CAACE,YAAY,GAAGA,YAAH,GAAkB,EAA/B,CAAd;AACH,GAJD;;AAOA,MAAIG,IAAI,GAAG;AACCN,IAAAA,QADD;AAECE,IAAAA,QAFD;AAGCD,IAAAA;AAHD,GAAX;AAOA,sBAAO,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEK;AAAhC,KAA0CP,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAlBD;;AAoBA,MAAMQ,UAAU,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGd,UAAU,CAACG,cAAD,CAA1B;;AACA,MAAIW,OAAO,KAAKC,SAAhB,EAA2B;AACvB,UAAM,IAAIC,KAAJ,CAAW,4CAAX,CAAN;AACH;;AACD,SAAOF,OAAP;AACH,CAND;;AAQA,SAASV,eAAT,EAA0BS,UAA1B","sourcesContent":["import React, {useState, useContext, createContext} from 'react'\nimport { getAllKitchens } from '../api/crud'\n\nconst KitchenContext = createContext();\n\n\nconst KitchenProvider = props => {\n    const [kitchens, updateKitchens] = useState([])\n\n    const loadData = async () => {\n        let all_kitchens = await getAllKitchens()\n        console.log(\"all_kitchens\", all_kitchens)\n        updateKitchens(all_kitchens ? all_kitchens : [])\n    }\n\n\n    let data = {\n                kitchens,\n                loadData,\n                updateKitchens\n            }\n\n\n    return <KitchenContext.Provider value={data} {...props} />\n}\n\nconst useKitchen = () => {\n    const context = useContext(KitchenContext)\n    if (context === undefined ){\n        throw new Error(`useUsers must be used within UsersProvider`)\n    }\n    return context\n}\n\nexport { KitchenProvider, useKitchen }\n"]},"metadata":{},"sourceType":"module"}